// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.7
// source: proto/exchange_rate.proto

package exchange_rate

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Currency) Reset() {
	*x = Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_rate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Currency) ProtoMessage() {}

func (x *Currency) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_rate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Currency.ProtoReflect.Descriptor instead.
func (*Currency) Descriptor() ([]byte, []int) {
	return file_proto_exchange_rate_proto_rawDescGZIP(), []int{0}
}

func (x *Currency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Currency) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CurrencyRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination string  `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	Rate        float32 `protobuf:"fixed32,3,opt,name=rate,proto3" json:"rate,omitempty"`
	Inverse     float32 `protobuf:"fixed32,4,opt,name=inverse,proto3" json:"inverse,omitempty"`
	Date        string  `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *CurrencyRate) Reset() {
	*x = CurrencyRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_rate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyRate) ProtoMessage() {}

func (x *CurrencyRate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_rate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyRate.ProtoReflect.Descriptor instead.
func (*CurrencyRate) Descriptor() ([]byte, []int) {
	return file_proto_exchange_rate_proto_rawDescGZIP(), []int{1}
}

func (x *CurrencyRate) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *CurrencyRate) GetRate() float32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *CurrencyRate) GetInverse() float32 {
	if x != nil {
		return x.Inverse
	}
	return 0
}

func (x *CurrencyRate) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

// BaseRateRequest get base currency rates
type ListRatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base string `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *ListRatesRequest) Reset() {
	*x = ListRatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_rate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRatesRequest) ProtoMessage() {}

func (x *ListRatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_rate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRatesRequest.ProtoReflect.Descriptor instead.
func (*ListRatesRequest) Descriptor() ([]byte, []int) {
	return file_proto_exchange_rate_proto_rawDescGZIP(), []int{2}
}

func (x *ListRatesRequest) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

type ListRatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base string          `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Date string          `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Data []*CurrencyRate `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListRatesResponse) Reset() {
	*x = ListRatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_rate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRatesResponse) ProtoMessage() {}

func (x *ListRatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_rate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRatesResponse.ProtoReflect.Descriptor instead.
func (*ListRatesResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_rate_proto_rawDescGZIP(), []int{3}
}

func (x *ListRatesResponse) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *ListRatesResponse) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ListRatesResponse) GetData() []*CurrencyRate {
	if x != nil {
		return x.Data
	}
	return nil
}

// RateRequest convert from base to destination
type CurrencyRateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base        string `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Destination string `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *CurrencyRateRequest) Reset() {
	*x = CurrencyRateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_rate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyRateRequest) ProtoMessage() {}

func (x *CurrencyRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_rate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyRateRequest.ProtoReflect.Descriptor instead.
func (*CurrencyRateRequest) Descriptor() ([]byte, []int) {
	return file_proto_exchange_rate_proto_rawDescGZIP(), []int{4}
}

func (x *CurrencyRateRequest) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *CurrencyRateRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

type CurrencyRateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rate *CurrencyRate `protobuf:"bytes,1,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *CurrencyRateResponse) Reset() {
	*x = CurrencyRateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_rate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyRateResponse) ProtoMessage() {}

func (x *CurrencyRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_rate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyRateResponse.ProtoReflect.Descriptor instead.
func (*CurrencyRateResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_rate_proto_rawDescGZIP(), []int{5}
}

func (x *CurrencyRateResponse) GetRate() *CurrencyRate {
	if x != nil {
		return x.Rate
	}
	return nil
}

// RatesRequest g
type ListCurrencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      string                 `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	PageIndex *wrapperspb.Int32Value `protobuf:"bytes,2,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize  *wrapperspb.Int32Value `protobuf:"bytes,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ListCurrencyRequest) Reset() {
	*x = ListCurrencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_rate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCurrencyRequest) ProtoMessage() {}

func (x *ListCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_rate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCurrencyRequest.ProtoReflect.Descriptor instead.
func (*ListCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_proto_exchange_rate_proto_rawDescGZIP(), []int{6}
}

func (x *ListCurrencyRequest) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *ListCurrencyRequest) GetPageIndex() *wrapperspb.Int32Value {
	if x != nil {
		return x.PageIndex
	}
	return nil
}

func (x *ListCurrencyRequest) GetPageSize() *wrapperspb.Int32Value {
	if x != nil {
		return x.PageSize
	}
	return nil
}

type ListCurrencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageIndex *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize  *wrapperspb.Int32Value `protobuf:"bytes,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Total     *wrapperspb.Int32Value `protobuf:"bytes,3,opt,name=total,proto3" json:"total,omitempty"`
	Data      []*Currency            `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListCurrencyResponse) Reset() {
	*x = ListCurrencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_rate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCurrencyResponse) ProtoMessage() {}

func (x *ListCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_rate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCurrencyResponse.ProtoReflect.Descriptor instead.
func (*ListCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_rate_proto_rawDescGZIP(), []int{7}
}

func (x *ListCurrencyResponse) GetPageIndex() *wrapperspb.Int32Value {
	if x != nil {
		return x.PageIndex
	}
	return nil
}

func (x *ListCurrencyResponse) GetPageSize() *wrapperspb.Int32Value {
	if x != nil {
		return x.PageSize
	}
	return nil
}

func (x *ListCurrencyResponse) GetTotal() *wrapperspb.Int32Value {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *ListCurrencyResponse) GetData() []*Currency {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_proto_exchange_rate_proto protoreflect.FileDescriptor

var file_proto_exchange_rate_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x08, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x0c,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x72, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x22, 0x26, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x6c, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x61, 0x74, 0x65,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4b, 0x0a, 0x13, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a, 0x14, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x61, 0x74, 0x65, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x22, 0x9d, 0x01, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x37, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xea, 0x01, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x37, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x8e, 0x02, 0x0a, 0x0d, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x12, 0x22, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x17, 0x5a, 0x15, 0x2e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_exchange_rate_proto_rawDescOnce sync.Once
	file_proto_exchange_rate_proto_rawDescData = file_proto_exchange_rate_proto_rawDesc
)

func file_proto_exchange_rate_proto_rawDescGZIP() []byte {
	file_proto_exchange_rate_proto_rawDescOnce.Do(func() {
		file_proto_exchange_rate_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_exchange_rate_proto_rawDescData)
	})
	return file_proto_exchange_rate_proto_rawDescData
}

var file_proto_exchange_rate_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_exchange_rate_proto_goTypes = []interface{}{
	(*Currency)(nil),              // 0: exchange_rate.Currency
	(*CurrencyRate)(nil),          // 1: exchange_rate.CurrencyRate
	(*ListRatesRequest)(nil),      // 2: exchange_rate.ListRatesRequest
	(*ListRatesResponse)(nil),     // 3: exchange_rate.ListRatesResponse
	(*CurrencyRateRequest)(nil),   // 4: exchange_rate.CurrencyRateRequest
	(*CurrencyRateResponse)(nil),  // 5: exchange_rate.CurrencyRateResponse
	(*ListCurrencyRequest)(nil),   // 6: exchange_rate.ListCurrencyRequest
	(*ListCurrencyResponse)(nil),  // 7: exchange_rate.ListCurrencyResponse
	(*wrapperspb.Int32Value)(nil), // 8: google.protobuf.Int32Value
}
var file_proto_exchange_rate_proto_depIdxs = []int32{
	1,  // 0: exchange_rate.ListRatesResponse.data:type_name -> exchange_rate.CurrencyRate
	1,  // 1: exchange_rate.CurrencyRateResponse.rate:type_name -> exchange_rate.CurrencyRate
	8,  // 2: exchange_rate.ListCurrencyRequest.pageIndex:type_name -> google.protobuf.Int32Value
	8,  // 3: exchange_rate.ListCurrencyRequest.pageSize:type_name -> google.protobuf.Int32Value
	8,  // 4: exchange_rate.ListCurrencyResponse.pageIndex:type_name -> google.protobuf.Int32Value
	8,  // 5: exchange_rate.ListCurrencyResponse.pageSize:type_name -> google.protobuf.Int32Value
	8,  // 6: exchange_rate.ListCurrencyResponse.total:type_name -> google.protobuf.Int32Value
	0,  // 7: exchange_rate.ListCurrencyResponse.data:type_name -> exchange_rate.Currency
	4,  // 8: exchange_rate.ExchangeRates.GetRate:input_type -> exchange_rate.CurrencyRateRequest
	6,  // 9: exchange_rate.ExchangeRates.ListCurrencies:input_type -> exchange_rate.ListCurrencyRequest
	2,  // 10: exchange_rate.ExchangeRates.ListRates:input_type -> exchange_rate.ListRatesRequest
	5,  // 11: exchange_rate.ExchangeRates.GetRate:output_type -> exchange_rate.CurrencyRateResponse
	7,  // 12: exchange_rate.ExchangeRates.ListCurrencies:output_type -> exchange_rate.ListCurrencyResponse
	3,  // 13: exchange_rate.ExchangeRates.ListRates:output_type -> exchange_rate.ListRatesResponse
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_exchange_rate_proto_init() }
func file_proto_exchange_rate_proto_init() {
	if File_proto_exchange_rate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_exchange_rate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_rate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_rate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_rate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_rate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyRateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_rate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyRateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_rate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCurrencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_rate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCurrencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_exchange_rate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_exchange_rate_proto_goTypes,
		DependencyIndexes: file_proto_exchange_rate_proto_depIdxs,
		MessageInfos:      file_proto_exchange_rate_proto_msgTypes,
	}.Build()
	File_proto_exchange_rate_proto = out.File
	file_proto_exchange_rate_proto_rawDesc = nil
	file_proto_exchange_rate_proto_goTypes = nil
	file_proto_exchange_rate_proto_depIdxs = nil
}
